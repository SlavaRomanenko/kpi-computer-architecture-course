=============================================
Лабораторна робота №1
=============================================

Тема
------

Налаштування середовища розробки (Linux, Quartus, Incisive), тестовий проект


Хід роботи
-------


**Налаштування середовища.** Для виконання завдання лабораторної роботи № 1 було необхідно встановити VirtualBox та Manjaro XFCE в нього. 
Після цього було проведено ряд оновлень та налаштувань для коректної роботи Virtual Box та Manjaro.
Наступним кроком було встановлення всього необхідного ПЗ, серед якого був Quartus та Cadence Incisive.


**Створення тестового проекту.** Я повторив проект з відео у тестовій директорії, потім приступив до виконання основного завдання. Завданням
було створити паралельний 32-розрядний регістр з асинхронним і синхронним скиданнями та входом дозволу у форматі за допомогою схемного редактора Quartus'a. Я створив такий проект, використавши
мультиплексори з бібліотеки мегафункцій та сконфігурувавши їх через MegaWizard. Після синтезу проекту я експортував його у Verilog файл
та написав простий Testbench, що тестував можливості запису у регістр, його синхронного та асинхронного скидання. Після цього я відкрив директорію
проекту у ``Incisive``, скомпілював потрібні Verilog файли, виконав elaborate інстансу ``test bench`` та запустив ``test bench`` на симуляцію.
На виході симуляції після кількох невдалих спроб і корекції помилок, з дружньою допомогою Волинка Назара, отримав поведінку, що відповідала очікуванням.

Після цього я написав реалізацію цього самого регістра на Verilog, що зайняло набагато менше часу. 
Ця реалізація запрацювала з тим самим, але оптимізованим(змінено назви пінів) тестбенчем відразу і без помилок.

.. image:: doc/register_ver.png
Так виглядає RTL схема цього регістра, написаного на Verilog

.. image:: doc/register_bdf.png
Так виглядає RTL схема, реалізована у схемному редакторі з використанням мегафункції мультиплексора.


Як можна помітити, за розміром схеми відрізняються доволі сильно, а за функціональністю вони не відрізняються.


Висновки
-------

На основі проведеної роботи та виконаних завдань можна зробити наступні висновки: для створення простих проектів цілком можна використовувати схемний редактор, а зі збільшеням с
кладності проектів складність створення схеми та її відладки також дуже сильно зростає, тоді на допомогу приходить Verilog. За допомогою якого складні схеми можна зробити набагато 
компактніше, ніж у редакторі схем. Тому для кожгного розміру проекта краще використовувати різні методи його створення.

P.S. За основу був взятий протокол Олександра Шлітхи

